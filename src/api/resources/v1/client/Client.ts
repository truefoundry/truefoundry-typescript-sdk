/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import { Secrets } from "../resources/secrets/client/Client";
import { SecretGroups } from "../resources/secretGroups/client/Client";
import { Clusters } from "../resources/clusters/client/Client";
import { Environments } from "../resources/environments/client/Client";
import { Applications } from "../resources/applications/client/Client";
import { ApplicationVersions } from "../resources/applicationVersions/client/Client";
import { Jobs } from "../resources/jobs/client/Client";
import { Workspaces } from "../resources/workspaces/client/Client";
import { Events } from "../resources/events/client/Client";
import { Alerts } from "../resources/alerts/client/Client";
import { Logs } from "../resources/logs/client/Client";
import { Artifacts } from "../resources/artifacts/client/Client";
import { Agents } from "../resources/agents/client/Client";
import { Prompts } from "../resources/prompts/client/Client";
import { Tools } from "../resources/tools/client/Client";
import { Models } from "../resources/models/client/Client";
import { ArtifactVersions } from "../resources/artifactVersions/client/Client";
import { ModelVersions } from "../resources/modelVersions/client/Client";
import { PromptVersions } from "../resources/promptVersions/client/Client";
import { ToolVersions } from "../resources/toolVersions/client/Client";
import { AgentVersions } from "../resources/agentVersions/client/Client";
import { DataDirectories } from "../resources/dataDirectories/client/Client";
import { MlRepos } from "../resources/mlRepos/client/Client";
import { TracingProjects } from "../resources/tracingProjects/client/Client";
import { Internal } from "../resources/internal/client/Client";

export declare namespace V1 {
    export interface Options {
        environment: core.Supplier<string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey?: core.Supplier<core.BearerToken | undefined>;
        fetcher?: core.FetchFunction;
    }

    export interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
        /** Additional headers to include in the request. */
        headers?: Record<string, string>;
    }
}

export class V1 {
    protected _secrets: Secrets | undefined;
    protected _secretGroups: SecretGroups | undefined;
    protected _clusters: Clusters | undefined;
    protected _environments: Environments | undefined;
    protected _applications: Applications | undefined;
    protected _applicationVersions: ApplicationVersions | undefined;
    protected _jobs: Jobs | undefined;
    protected _workspaces: Workspaces | undefined;
    protected _events: Events | undefined;
    protected _alerts: Alerts | undefined;
    protected _logs: Logs | undefined;
    protected _artifacts: Artifacts | undefined;
    protected _agents: Agents | undefined;
    protected _prompts: Prompts | undefined;
    protected _tools: Tools | undefined;
    protected _models: Models | undefined;
    protected _artifactVersions: ArtifactVersions | undefined;
    protected _modelVersions: ModelVersions | undefined;
    protected _promptVersions: PromptVersions | undefined;
    protected _toolVersions: ToolVersions | undefined;
    protected _agentVersions: AgentVersions | undefined;
    protected _dataDirectories: DataDirectories | undefined;
    protected _mlRepos: MlRepos | undefined;
    protected _tracingProjects: TracingProjects | undefined;
    protected _internal: Internal | undefined;

    constructor(protected readonly _options: V1.Options) {}

    public get secrets(): Secrets {
        return (this._secrets ??= new Secrets(this._options));
    }

    public get secretGroups(): SecretGroups {
        return (this._secretGroups ??= new SecretGroups(this._options));
    }

    public get clusters(): Clusters {
        return (this._clusters ??= new Clusters(this._options));
    }

    public get environments(): Environments {
        return (this._environments ??= new Environments(this._options));
    }

    public get applications(): Applications {
        return (this._applications ??= new Applications(this._options));
    }

    public get applicationVersions(): ApplicationVersions {
        return (this._applicationVersions ??= new ApplicationVersions(this._options));
    }

    public get jobs(): Jobs {
        return (this._jobs ??= new Jobs(this._options));
    }

    public get workspaces(): Workspaces {
        return (this._workspaces ??= new Workspaces(this._options));
    }

    public get events(): Events {
        return (this._events ??= new Events(this._options));
    }

    public get alerts(): Alerts {
        return (this._alerts ??= new Alerts(this._options));
    }

    public get logs(): Logs {
        return (this._logs ??= new Logs(this._options));
    }

    public get artifacts(): Artifacts {
        return (this._artifacts ??= new Artifacts(this._options));
    }

    public get agents(): Agents {
        return (this._agents ??= new Agents(this._options));
    }

    public get prompts(): Prompts {
        return (this._prompts ??= new Prompts(this._options));
    }

    public get tools(): Tools {
        return (this._tools ??= new Tools(this._options));
    }

    public get models(): Models {
        return (this._models ??= new Models(this._options));
    }

    public get artifactVersions(): ArtifactVersions {
        return (this._artifactVersions ??= new ArtifactVersions(this._options));
    }

    public get modelVersions(): ModelVersions {
        return (this._modelVersions ??= new ModelVersions(this._options));
    }

    public get promptVersions(): PromptVersions {
        return (this._promptVersions ??= new PromptVersions(this._options));
    }

    public get toolVersions(): ToolVersions {
        return (this._toolVersions ??= new ToolVersions(this._options));
    }

    public get agentVersions(): AgentVersions {
        return (this._agentVersions ??= new AgentVersions(this._options));
    }

    public get dataDirectories(): DataDirectories {
        return (this._dataDirectories ??= new DataDirectories(this._options));
    }

    public get mlRepos(): MlRepos {
        return (this._mlRepos ??= new MlRepos(this._options));
    }

    public get tracingProjects(): TracingProjects {
        return (this._tracingProjects ??= new TracingProjects(this._options));
    }

    public get internal(): Internal {
        return (this._internal ??= new Internal(this._options));
    }
}
