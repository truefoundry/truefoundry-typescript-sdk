/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index.js";

export interface ClusterManifest {
    /** +value=cluster */
    type: "cluster";
    /**
     * +label=Name
     * +icon=fa-desktop:#black
     * +sort=10
     * +message=3 to 35 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
     */
    name: string;
    /**
     * +label=Cluster Type
     * +icon=fa-cloud:#7EC8E3
     * +sort=20
     * +usage=The cluster type of this cluster
     */
    cluster_type: ClusterManifest.ClusterType;
    /**
     * +label=Environments
     * +icon=fa-tags:#black
     * +usage=Tag the environment like dev, staging or production. You will need to [create environments](https://docs.truefoundry.com/docs/key-concepts#creating-environments) if you don't have already.
     * +sort=30
     */
    environment_names: string[];
    /**
     * +label=Base Domain URLs
     * +placeholder=Enter Base Domain URL eg. devtest.mydomain.com or *.mydomain.com
     * +usage=One or more base URLs, which can be either a wildcard domain (resulting in app URLs like `<app-name>-<workspace-name>.<base-domain-URL>`) or a non-wildcard domain (resulting in app URLs like `<base-domain-URL>/<app-name>-<workspace-name>`)
     * > Read more about routing [here](https://docs.truefoundry.com/docs/routing) and about 'A' record and domain mapping [here](https://docs.truefoundry.com/docs/setting-up-domain)
     * +icon=fa-globe:#68BBE3
     * +sort=40
     * +message=Domain URL should be valid domain or IP address
     */
    base_domains?: string[];
    /**
     * +label=Monitoring
     * +icon=fa-gear:#68BBE3
     * +sort=50
     */
    monitoring?: ClusterManifest.Monitoring;
    /**
     * +label=Cluster Default Registry
     * +sort=60
     */
    default_registry_fqn?: string;
    /**
     * +label=Workbench Config
     * +sort=70
     */
    workbench_config?: ClusterManifest.WorkbenchConfig;
    spark_config?: TrueFoundry.SparkConfig;
    /**
     * +label=Cluster Integration FQN
     * +sort=75
     * +uiType=IntegrationSelect
     * +uiProps={"descriptionKey": "cluster_name","integrationType": "cluster"}
     */
    cluster_integration_fqn?: string;
    /**
     * +label=Workflow Storage Integration
     * +sort=80
     * +uiType=IntegrationSelect
     * +uiProps={"descriptionKey": "cluster_name","integrationType": "blob-storage"}
     */
    workflow_storage_integration_fqn?: string;
    /**
     * +label=Nodepools
     * +usage=Add nodepools that are already created in your cluster.
     * When deploying, applications can choose to schedule from these nodepools.
     * +sort=90
     */
    supported_nodepools?: TrueFoundry.Nodepool[];
    /**
     * +label=Node Label Keys
     * +usage=The node label keys that this cluster supports.
     * Note: You will additionally need to add `truefoundry.com/gpu_type` label for GPU-supported node pools.
     * For more information, check out [this documentation](https://docs.truefoundry.com/docs/generic-control-plane#configuring-node-pools-for-truefoundry).
     * +sort=100
     */
    node_label_keys?: ClusterManifest.NodeLabelKeys;
    /**
     * +label=Collaborators
     * +usage=Collaborators who can access this cluster
     * +sort=110
     */
    collaborators: TrueFoundry.Collaborator[];
}

export namespace ClusterManifest {
    /**
     * +label=Cluster Type
     * +icon=fa-cloud:#7EC8E3
     * +sort=20
     * +usage=The cluster type of this cluster
     */
    export type ClusterType = "aws-eks" | "gcp-gke-standard" | "azure-aks" | "generic" | "civo-talos";
    export const ClusterType = {
        AwsEks: "aws-eks",
        GcpGkeStandard: "gcp-gke-standard",
        AzureAks: "azure-aks",
        Generic: "generic",
        CivoTalos: "civo-talos",
    } as const;

    /**
     * +label=Monitoring
     * +icon=fa-gear:#68BBE3
     * +sort=50
     */
    export interface Monitoring {
        /** +label=Cluster Loki URL */
        loki_url?: string;
        /** +label=Cluster VictoriaLogs URL */
        victoria_logs_url?: string;
        /** +label=Cluster Prometheus URL */
        prometheus_url?: string;
        /** +label=Cluster Kubecost URL */
        kubecost_url?: string;
    }

    /**
     * +label=Workbench Config
     * +sort=70
     */
    export interface WorkbenchConfig {
        notebook_config?: TrueFoundry.NotebookConfig;
        ssh_server_config?: TrueFoundry.SshServerConfig;
        /**
         * +label=Default Storage Class
         * +usage=The default storage class for the home directory of workbench
         * +message=Must not contain any spaces.
         */
        default_storage_class?: string;
    }

    /**
     * +label=Node Label Keys
     * +usage=The node label keys that this cluster supports.
     * Note: You will additionally need to add `truefoundry.com/gpu_type` label for GPU-supported node pools.
     * For more information, check out [this documentation](https://docs.truefoundry.com/docs/generic-control-plane#configuring-node-pools-for-truefoundry).
     * +sort=100
     */
    export interface NodeLabelKeys {
        /**
         * +label=Nodepool Selector Label
         * +usage=The nodepool selector label that this cluster supports
         */
        nodepool_selector_label: string;
    }
}
