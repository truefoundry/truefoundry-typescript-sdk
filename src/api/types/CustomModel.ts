/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index.js";

/**
 * +label=Custom Model
 * +icon=puzzle-piece
 */
export interface CustomModel {
    /**
     * +sort=1
     * +message=2 to 62 characters long alphanumeric word, may contain - in between, cannot start with a number
     */
    name: string;
    hostedModelName: string;
    /** +message=enter valid https/http URL that should not end with trailing slash */
    url: string;
    modelServer: CustomModel.ModelServer;
    /** +uiType=Hidden */
    tfyApplicationId?: string;
    /** +value=integration/model/custom */
    type: "integration/model/custom";
    /**
     * +usage=Specify the type of the model
     * +sort=4
     */
    modelTypes: TrueFoundry.ModelType[];
    /**
     * +label=Auth Data
     * +usage=Custom authentication data for the integration.
     * +sort=300
     */
    authData?: CustomModel.AuthData;
    /**
     * +label=Custom Headers
     * +usage=Custom headers for the integration. Forwarded to the provider as is. For example: `{"Authorization": "APIKey <token>"}`
     * +sort=500
     */
    headers?: Record<string, string>;
    cost?: TrueFoundry.ModelCostMetric;
    /**
     * +label=Access Control
     * +usage=List of subjects that are authorized to access this integration. List of user fqn in format <user_type>:<username>.
     * +sort=600
     * +uiType=AuthorizedSubjects
     */
    authorizedSubjects?: string[];
}

export namespace CustomModel {
    export type ModelServer = "vllm-openai" | "tei" | "infinity" | "nemo-retriever";
    export const ModelServer = {
        VllmOpenai: "vllm-openai",
        Tei: "tei",
        Infinity: "infinity",
        NemoRetriever: "nemo-retriever",
    } as const;
    /**
     * +label=Auth Data
     * +usage=Custom authentication data for the integration.
     * +sort=300
     */
    export type AuthData = TrueFoundry.CustomBasicAuth | TrueFoundry.CustomBearerAuth;
}
