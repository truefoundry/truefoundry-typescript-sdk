/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index";

/**
 * +label=Node selector
 * +usage=Constraints to select a Node - Specific GPU / Instance Families, On-Demand/Spot.
 */
export interface NodeSelector {
    /** +value=node_selector */
    type: "node_selector";
    /**
     * +label=GPU Type
     * +usage=Name of the Nvidia GPU. One of [P4, P100, V100, T4, A10G, A100_40GB, A100_80GB]
     * One instance of the card contains the following amount of memory -
     * P4: 8 GB, P100: 16 GB, V100: 16 GB, T4: 16 GB, A10G: 24 GB, A100_40GB: 40GB, A100_80GB: 80 GB
     */
    gpu_type?: string;
    /**
     * +label=Instance family
     * +usage=Instance family of the underlying machine to use. Multiple instance families can be supplied.
     * The workload is guaranteed to be scheduled on one of them.
     */
    instance_families?: string[];
    /**
     * +label=Capacity Type
     * +usage=Configure what type of nodes to run the app. By default no placement logic is applied.
     * "spot_fallback_on_demand" will try to place the application on spot nodes but will fallback to on-demand when spot nodes are not available.
     * "spot" will strictly place the application on spot nodes.
     * "on_demand" will strictly place the application on on-demand nodes.
     */
    capacity_type?: TrueFoundry.NodeSelectorCapacityType;
}
