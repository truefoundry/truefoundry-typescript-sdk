/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index.js";

export interface PolicyManifest {
    /** +value=policy */
    type: "policy";
    /** Unique identifier of the policy across the organisation */
    name: string;
    /** Description of the policy that explains what the policy does, its purpose, and how it affects resources. This helps other users understand the policy's behavior and impact. */
    description: string;
    /** Defines if the policy validates or mutates resources. Validation policies check TrueFoundry manifests to ensure they meet conditions and can block deployments. Mutation policies modify Kubernetes manifests before they're applied to the cluster. See this [documentation](https://docs.truefoundry.com/docs/applying-custom-policies#applying-custom-policies) for more details. */
    operation: TrueFoundry.PolicyManifestOperation;
    /** Mode of the policy: `Audit` logs all policy evaluations without blocking deployments. `Enforce` blocks deployments if the policy fails. `Disabled` deactivates the policy. */
    mode: TrueFoundry.PolicyManifestMode;
    /** Types of applications this policy applies to */
    entities: TrueFoundry.PolicyEntityTypes[];
    /** Actions this policy applies to */
    actions: TrueFoundry.PolicyActions[];
    filters?: TrueFoundry.PolicyFilters;
    /** TypeScript code for Policy logic. To write and test your policy code, please refer to this [repository](https://github.com/truefoundry/tfy-typescript-policy) */
    code: string;
}
