/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index.js";

export interface PolicyManifest {
    /** +value=policy */
    type: "policy";
    /**
     * +label=Name
     * +usage=Unique identifier of the policy across the organisation
     * +sort=2
     * +message=3 to 32 lower case characters long alphanumeric word, may contain - in between, cannot start with a number
     */
    name: string;
    /**
     * +label=Description
     * +usage=Description of the policy that explains what the policy does, its purpose, and how it affects resources. This helps other users understand the policy's behavior and impact.
     * +sort=3
     * ++uiProps={"descriptionInline":true}
     * +message=Description must be between 1 byte and 1024 bytes
     */
    description: string;
    /**
     * +label=Policy Action
     * +usage=Defines if the policy validates or mutates resources. Validation policies check TrueFoundry manifests to ensure they meet conditions and can block deployments. Mutation policies modify Kubernetes manifests before they're applied to the cluster. See this [documentation](https://docs.truefoundry.com/docs/applying-custom-policies#applying-custom-policies) for more details.
     * +sort=4
     */
    operation: PolicyManifest.Operation;
    /**
     * +label=Mode
     * +usage=Mode of the policy: `Audit` logs all policy evaluations without blocking deployments. `Enforce` blocks deployments if the policy fails. `Disabled` deactivates the policy.
     * +uiType=MultiSelectPills
     * +sort=6
     */
    mode: PolicyManifest.Mode;
    /**
     * +label=Entities
     * +usage=Types of applications this policy applies to
     * +uiType=MultiSelect
     * +sort=8
     */
    entities: TrueFoundry.PolicyEntityTypes[];
    /**
     * +label=Actions
     * +usage=Actions this policy applies to
     * +uiType=Hidden
     * +sort=9
     */
    actions: TrueFoundry.PolicyActions[];
    filters?: TrueFoundry.PolicyFilters;
    /**
     * +label=Policy Code
     * +usage=TypeScript code for Policy logic. To write and test your policy code, please refer to this [repository](https://github.com/truefoundry/tfy-typescript-policy)
     * +sort=13
     * +uiType=CodeEditor
     * +uiProps={"language":"typescript"}
     * +message=Code size must be between 1 byte and 10 KB
     */
    code: string;
}

export namespace PolicyManifest {
    /**
     * +label=Policy Action
     * +usage=Defines if the policy validates or mutates resources. Validation policies check TrueFoundry manifests to ensure they meet conditions and can block deployments. Mutation policies modify Kubernetes manifests before they're applied to the cluster. See this [documentation](https://docs.truefoundry.com/docs/applying-custom-policies#applying-custom-policies) for more details.
     * +sort=4
     */
    export type Operation = TrueFoundry.PolicyMutationOperation | TrueFoundry.PolicyValidationOperation;
    /**
     * +label=Mode
     * +usage=Mode of the policy: `Audit` logs all policy evaluations without blocking deployments. `Enforce` blocks deployments if the policy fails. `Disabled` deactivates the policy.
     * +uiType=MultiSelectPills
     * +sort=6
     */
    export type Mode = "audit" | "enforce" | "disabled";
    export const Mode = {
        Audit: "audit",
        Enforce: "enforce",
        Disabled: "disabled",
    } as const;
}
