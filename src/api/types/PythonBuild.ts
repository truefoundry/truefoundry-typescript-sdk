/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as TrueFoundry from "../index.js";

/**
 * Describes that we are using python to build a container image with a specific python version and pip packages installed.
 */
export interface PythonBuild {
    /** +value=tfy-python-buildpack */
    type: "tfy-python-buildpack";
    /** Python version to run your application. Should be one of the tags listed on [Official Python Docker Page](https://hub.docker.com/_/python) */
    python_version?: string;
    /** Build path relative to project root path. */
    build_context_path: string;
    /**
     * Path to `requirements.txt` relative to
     * `Path to build context`
     */
    requirements_path?: string;
    /**
     * Define pip package requirements.
     * In Python/YAML E.g. ["fastapi>=0.90,<1.0", "uvicorn"]
     */
    pip_packages?: string[];
    /** Python dependencies to install */
    python_dependencies?: TrueFoundry.PythonBuildPythonDependencies;
    /**
     * Debian packages to install via `apt get`.
     * In Python/YAML E.g. ["git", "ffmpeg", "htop"]
     */
    apt_packages?: string[];
    /**
     * Command to run when the container starts.
     * Command will be set as the Entrypoint of the generated image.
     * When deploying a Job, the command can be templatized by defining `params` and referencing them in command
     * E.g. `python main.py --learning_rate {{learning_rate}}`
     */
    command: TrueFoundry.PythonBuildCommand;
    /**
     * Version of CUDA Toolkit and CUDNN to install in the image
     * These combinations are based off of publically available docker images on docker hub
     * You can also specify a valid tag of the form {cuda_version_number}-cudnn{cudnn_version_number}-{runtime|devel}-ubuntu{ubuntu_version}
     * Refer https://hub.docker.com/r/nvidia/cuda/tags for valid set of values
     * Note: We use deadsnakes ubuntu ppa to add Python that currently supports only Ubuntu 18.04, 20.04 and 22.04
     */
    cuda_version?: string;
}
