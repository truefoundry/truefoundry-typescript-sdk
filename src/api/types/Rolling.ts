/**
 * This file was auto-generated by Fern from our API Definition.
 */

/**
 * +docs=This strategy updates the pods in a rolling fashion such that a subset of the
 * total pods are replaced with new version at one time.
 * A commonly used strategy can be to have maxUnavailablePercentage close to 0 so that there
 * is no downtime and keep the maxSurgePercentage to around 25%. If you are anyways running
 * a large number of pods, the service can often tolerate a few pods going down - so you
 * max maxUnavailablePercentage = 10 and maxSurgePercentage=0. You can read about it more
 * [here](https://spot.io/resources/kubernetes-autoscaling/5-kubernetes-deployment-strategies-roll-out-like-the-pros/)
 * +label=Rolling update strategy
 */
export interface Rolling {
    /** +value=rolling_update */
    type: "rolling_update";
    /**
     * +label=Max unavailable(%)
     * +usage=Percentage of total replicas that can be brought down at one time.
     * For a value of 25 when replicas are set to 12 this would mean minimum (25% of 12) = 3 pods might be unavailable during the deployment.
     * Setting this to a higher value can help in speeding up the deployment process.
     */
    maxUnavailablePercentage: number;
    /**
     * +label=Max Surge(%)
     * +usage=Percentage of total replicas of updated image that can be brought up over the total replicas count.
     * For a value of 25 when replicas are set to 12 this would mean (12+(25% of 12) = 15) pods might be running at one time.
     * Setting this to a higher value can help in speeding up the deployment process.
     */
    maxSurgePercentage: number;
}
