/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ApplicationType } from "./ApplicationType.js";
import { Subject } from "./Subject.js";
import { ApplicationMetadata } from "./ApplicationMetadata.js";
import { ApplicationLifecycleStage } from "./ApplicationLifecycleStage.js";
import { Recommendation } from "./Recommendation.js";
import { Alert } from "./Alert.js";
import { ApplicationProblem } from "./ApplicationProblem.js";

export const Application: core.serialization.ObjectSchema<serializers.Application.Raw, TrueFoundry.Application> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        fqn: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        type: ApplicationType.optional(),
        createdBySubject: Subject,
        tenantName: core.serialization.string().optional(),
        metadata: ApplicationMetadata.optional(),
        lifecycleStage: ApplicationLifecycleStage,
        workspaceId: core.serialization.string().optional(),
        lastVersion: core.serialization.number().optional(),
        activeVersion: core.serialization.number().optional(),
        createdAt: core.serialization.date().optional(),
        updatedAt: core.serialization.date().optional(),
        recommendations: core.serialization.list(Recommendation).optional(),
        alerts: core.serialization.list(Alert).optional(),
        alertsSummary: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        applicationDebugInfos: core.serialization
            .list(core.serialization.lazyObject(() => serializers.ApplicationDebugInfo))
            .optional(),
        potentialProblems: core.serialization.list(ApplicationProblem).optional(),
        autopilot: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        workspaceFqn: core.serialization.string().optional(),
        createdBy: core.serialization.string().optional(),
        deployment: core.serialization.lazyObject(() => serializers.Deployment).optional(),
        activeDeploymentId: core.serialization.string().optional(),
        lastDeploymentId: core.serialization.string().optional(),
    });

export declare namespace Application {
    export interface Raw {
        id?: string | null;
        fqn?: string | null;
        name?: string | null;
        type?: ApplicationType.Raw | null;
        createdBySubject: Subject.Raw;
        tenantName?: string | null;
        metadata?: ApplicationMetadata.Raw | null;
        lifecycleStage: ApplicationLifecycleStage.Raw;
        workspaceId?: string | null;
        lastVersion?: number | null;
        activeVersion?: number | null;
        createdAt?: string | null;
        updatedAt?: string | null;
        recommendations?: Recommendation.Raw[] | null;
        alerts?: Alert.Raw[] | null;
        alertsSummary?: Record<string, unknown> | null;
        applicationDebugInfos?: serializers.ApplicationDebugInfo.Raw[] | null;
        potentialProblems?: ApplicationProblem.Raw[] | null;
        autopilot: Record<string, unknown>;
        workspaceFqn?: string | null;
        createdBy?: string | null;
        deployment?: serializers.Deployment.Raw | null;
        activeDeploymentId?: string | null;
        lastDeploymentId?: string | null;
    }
}
