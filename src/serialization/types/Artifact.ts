/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ArtifactType } from "./ArtifactType.js";
import { Subject } from "./Subject.js";
import { BaseArtifactVersion } from "./BaseArtifactVersion.js";

export const Artifact: core.serialization.ObjectSchema<serializers.Artifact.Raw, TrueFoundry.Artifact> =
    core.serialization.object({
        id: core.serialization.string(),
        mlRepoId: core.serialization.property("ml_repo_id", core.serialization.string()),
        type: ArtifactType,
        name: core.serialization.string(),
        fqn: core.serialization.string(),
        createdBySubject: core.serialization.property("created_by_subject", Subject),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date().optional()),
        latestVersion: core.serialization.property("latest_version", BaseArtifactVersion.optional()),
        runSteps: core.serialization.property(
            "run_steps",
            core.serialization.list(core.serialization.number()).optional(),
        ),
    });

export declare namespace Artifact {
    export interface Raw {
        id: string;
        ml_repo_id: string;
        type: ArtifactType.Raw;
        name: string;
        fqn: string;
        created_by_subject: Subject.Raw;
        created_at?: string | null;
        updated_at?: string | null;
        latest_version?: BaseArtifactVersion.Raw | null;
        run_steps?: number[] | null;
    }
}
