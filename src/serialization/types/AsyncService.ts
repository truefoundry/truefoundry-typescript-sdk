/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { AsyncServiceReplicas } from "./AsyncServiceReplicas";
import { Rolling } from "./Rolling.js";
import { WorkerConfig } from "./WorkerConfig.js";
import { AsyncProcessorSidecar } from "./AsyncProcessorSidecar.js";
import { BaseService } from "./BaseService.js";

export const AsyncService: core.serialization.ObjectSchema<serializers.AsyncService.Raw, TrueFoundry.AsyncService> =
    core.serialization
        .object({
            type: core.serialization.stringLiteral("async-service").optional(),
            replicas: AsyncServiceReplicas.optional(),
            rolloutStrategy: core.serialization.property("rollout_strategy", Rolling.optional()),
            workerConfig: core.serialization.property("worker_config", WorkerConfig.optional()),
            sidecar: AsyncProcessorSidecar.optional(),
        })
        .extend(BaseService);

export declare namespace AsyncService {
    export interface Raw extends BaseService.Raw {
        type?: "async-service" | null;
        replicas?: AsyncServiceReplicas.Raw | null;
        rollout_strategy?: Rolling.Raw | null;
        worker_config?: WorkerConfig.Raw | null;
        sidecar?: AsyncProcessorSidecar.Raw | null;
    }
}
