/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { BaseServiceImage } from "./BaseServiceImage";
import { ArtifactsDownload } from "./ArtifactsDownload.js";
import { Resources } from "./Resources.js";
import { Port } from "./Port.js";
import { BaseServiceMountsItem } from "./BaseServiceMountsItem";
import { Kustomize } from "./Kustomize.js";
import { HealthProbe } from "./HealthProbe.js";

export const BaseService: core.serialization.ObjectSchema<serializers.BaseService.Raw, TrueFoundry.BaseService> =
    core.serialization.object({
        name: core.serialization.string(),
        image: BaseServiceImage,
        artifactsDownload: core.serialization.property("artifacts_download", ArtifactsDownload.optional()),
        resources: Resources.optional(),
        env: core.serialization.record(core.serialization.string(), core.serialization.string().optional()).optional(),
        ports: core.serialization.list(Port),
        serviceAccount: core.serialization.property("service_account", core.serialization.string().optional()),
        mounts: core.serialization.list(BaseServiceMountsItem).optional(),
        labels: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        kustomize: Kustomize.optional(),
        livenessProbe: core.serialization.property("liveness_probe", HealthProbe.optional()),
        readinessProbe: core.serialization.property("readiness_probe", HealthProbe.optional()),
        workspaceFqn: core.serialization.property("workspace_fqn", core.serialization.string().optional()),
    });

export declare namespace BaseService {
    export interface Raw {
        name: string;
        image: BaseServiceImage.Raw;
        artifacts_download?: ArtifactsDownload.Raw | null;
        resources?: Resources.Raw | null;
        env?: Record<string, string | null | undefined> | null;
        ports: Port.Raw[];
        service_account?: string | null;
        mounts?: BaseServiceMountsItem.Raw[] | null;
        labels?: Record<string, string> | null;
        kustomize?: Kustomize.Raw | null;
        liveness_probe?: HealthProbe.Raw | null;
        readiness_probe?: HealthProbe.Raw | null;
        workspace_fqn?: string | null;
    }
}
