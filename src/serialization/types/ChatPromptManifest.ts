/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ChatPromptManifestMessagesItem } from "./ChatPromptManifestMessagesItem";
import { ModelConfiguration } from "./ModelConfiguration.js";
import { ToolSchema } from "./ToolSchema.js";
import { ChatPromptManifestMcpServersItem } from "./ChatPromptManifestMcpServersItem";
import { Guardrails } from "./Guardrails.js";

export const ChatPromptManifest: core.serialization.ObjectSchema<
    serializers.ChatPromptManifest.Raw,
    TrueFoundry.ChatPromptManifest
> = core.serialization.object({
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    versionAlias: core.serialization.property("version_alias", core.serialization.string().optional()),
    mlRepo: core.serialization.property("ml_repo", core.serialization.string()),
    version: core.serialization.number().optional(),
    type: core.serialization.stringLiteral("chat_prompt"),
    messages: core.serialization.list(ChatPromptManifestMessagesItem),
    variables: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    modelConfiguration: core.serialization.property("model_configuration", ModelConfiguration.optional()),
    tools: core.serialization.list(ToolSchema).optional(),
    mcpServers: core.serialization.property(
        "mcp_servers",
        core.serialization.list(ChatPromptManifestMcpServersItem).optional(),
    ),
    guardrails: Guardrails.optional(),
});

export declare namespace ChatPromptManifest {
    export interface Raw {
        name: string;
        description?: string | null;
        metadata: Record<string, unknown>;
        version_alias?: string | null;
        ml_repo: string;
        version?: number | null;
        type: "chat_prompt";
        messages: ChatPromptManifestMessagesItem.Raw[];
        variables?: Record<string, string> | null;
        model_configuration?: ModelConfiguration.Raw | null;
        tools?: ToolSchema.Raw[] | null;
        mcp_servers?: ChatPromptManifestMcpServersItem.Raw[] | null;
        guardrails?: Guardrails.Raw | null;
    }
}
