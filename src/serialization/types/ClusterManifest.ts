/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ClusterManifestClusterType } from "./ClusterManifestClusterType";
import { ClusterManifestMonitoring } from "./ClusterManifestMonitoring";
import { ClusterManifestWorkbenchConfig } from "./ClusterManifestWorkbenchConfig";
import { SparkConfig } from "./SparkConfig.js";
import { Nodepool } from "./Nodepool.js";
import { ClusterManifestNodeLabelKeys } from "./ClusterManifestNodeLabelKeys";
import { Collaborator } from "./Collaborator.js";

export const ClusterManifest: core.serialization.ObjectSchema<
    serializers.ClusterManifest.Raw,
    TrueFoundry.ClusterManifest
> = core.serialization.object({
    type: core.serialization.stringLiteral("cluster"),
    name: core.serialization.string(),
    cluster_type: ClusterManifestClusterType,
    environment_names: core.serialization.list(core.serialization.string()),
    base_domains: core.serialization.list(core.serialization.string()).optional(),
    monitoring: ClusterManifestMonitoring.optional(),
    default_registry_fqn: core.serialization.string().optional(),
    workbench_config: ClusterManifestWorkbenchConfig.optional(),
    spark_config: SparkConfig.optional(),
    cluster_integration_fqn: core.serialization.string().optional(),
    workflow_storage_integration_fqn: core.serialization.string().optional(),
    supported_nodepools: core.serialization.list(Nodepool).optional(),
    node_label_keys: ClusterManifestNodeLabelKeys.optional(),
    collaborators: core.serialization.list(Collaborator),
});

export declare namespace ClusterManifest {
    export interface Raw {
        type: "cluster";
        name: string;
        cluster_type: ClusterManifestClusterType.Raw;
        environment_names: string[];
        base_domains?: string[] | null;
        monitoring?: ClusterManifestMonitoring.Raw | null;
        default_registry_fqn?: string | null;
        workbench_config?: ClusterManifestWorkbenchConfig.Raw | null;
        spark_config?: SparkConfig.Raw | null;
        cluster_integration_fqn?: string | null;
        workflow_storage_integration_fqn?: string | null;
        supported_nodepools?: Nodepool.Raw[] | null;
        node_label_keys?: ClusterManifestNodeLabelKeys.Raw | null;
        collaborators: Collaborator.Raw[];
    }
}
