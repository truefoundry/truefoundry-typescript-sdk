/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { EnvironmentColor } from "./EnvironmentColor.js";
import { Subject } from "./Subject.js";
import { EnvironmentOptimizeFor } from "./EnvironmentOptimizeFor.js";
import { EnvironmentManifest } from "./EnvironmentManifest.js";

export const Environment: core.serialization.ObjectSchema<serializers.Environment.Raw, TrueFoundry.Environment> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string(),
        priority: core.serialization.number(),
        color: EnvironmentColor,
        tenantName: core.serialization.string(),
        createdBySubject: Subject,
        isProduction: core.serialization.boolean(),
        optimizeFor: EnvironmentOptimizeFor.optional(),
        manifest: EnvironmentManifest,
        createdBy: core.serialization.string().optional(),
    });

export declare namespace Environment {
    export interface Raw {
        id?: string | null;
        name: string;
        priority: number;
        color: EnvironmentColor.Raw;
        tenantName: string;
        createdBySubject: Subject.Raw;
        isProduction: boolean;
        optimizeFor?: EnvironmentOptimizeFor.Raw | null;
        manifest: EnvironmentManifest.Raw;
        createdBy?: string | null;
    }
}
