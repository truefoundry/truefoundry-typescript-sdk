/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";

export const FallbackWhen: core.serialization.ObjectSchema<serializers.FallbackWhen.Raw, TrueFoundry.FallbackWhen> =
    core.serialization.object({
        subjects: core.serialization.list(core.serialization.string()).optional(),
        models: core.serialization.list(core.serialization.string()).optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
        responseStatusCodes: core.serialization.property(
            "response_status_codes",
            core.serialization.list(core.serialization.number()),
        ),
    });

export declare namespace FallbackWhen {
    export interface Raw {
        subjects?: string[] | null;
        models?: string[] | null;
        metadata?: Record<string, string> | null;
        response_status_codes: number[];
    }
}
