/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { GcpRegion } from "./GcpRegion.js";
import { GcpKeyFileAuth } from "./GcpKeyFileAuth.js";
import { VertexModelV2 } from "./VertexModelV2.js";
import { Collaborator } from "./Collaborator.js";

export const GoogleVertexProviderAccount: core.serialization.ObjectSchema<
    serializers.GoogleVertexProviderAccount.Raw,
    TrueFoundry.GoogleVertexProviderAccount
> = core.serialization.object({
    type: core.serialization.stringLiteral("provider-account/google-vertex"),
    name: core.serialization.string(),
    projectId: core.serialization.property("project_id", core.serialization.string()),
    region: GcpRegion,
    authData: core.serialization.property("auth_data", GcpKeyFileAuth.optional()),
    integrations: core.serialization.list(VertexModelV2),
    collaborators: core.serialization.list(Collaborator).optional(),
});

export declare namespace GoogleVertexProviderAccount {
    export interface Raw {
        type: "provider-account/google-vertex";
        name: string;
        project_id: string;
        region: GcpRegion.Raw;
        auth_data?: GcpKeyFileAuth.Raw | null;
        integrations: VertexModelV2.Raw[];
        collaborators?: Collaborator.Raw[] | null;
    }
}
