/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { HelmSource } from "./HelmSource";
import { Kustomize } from "./Kustomize.js";

export const Helm: core.serialization.ObjectSchema<serializers.Helm.Raw, TrueFoundry.Helm> = core.serialization.object({
    type: core.serialization.stringLiteral("helm"),
    name: core.serialization.string(),
    labels: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    source: HelmSource,
    values: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    kustomize: Kustomize.optional(),
    ignoreDifferences: core.serialization
        .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()))
        .optional(),
    workspace_fqn: core.serialization.string().optional(),
});

export declare namespace Helm {
    export interface Raw {
        type: "helm";
        name: string;
        labels?: Record<string, string> | null;
        source: HelmSource.Raw;
        values?: Record<string, unknown> | null;
        kustomize?: Kustomize.Raw | null;
        ignoreDifferences?: Record<string, unknown>[] | null;
        workspace_fqn?: string | null;
    }
}
