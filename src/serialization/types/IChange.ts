/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { IChangeOperation } from "./IChangeOperation.js";

export const IChange: core.serialization.ObjectSchema<serializers.IChange.Raw, TrueFoundry.IChange> =
    core.serialization.object({
        type: IChangeOperation,
        key: core.serialization.string(),
        value: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        oldValue: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        changes: core.serialization.list(core.serialization.lazyObject(() => serializers.IChange)).optional(),
    });

export declare namespace IChange {
    export interface Raw {
        type: IChangeOperation.Raw;
        key: string;
        value?: Record<string, unknown> | null;
        oldValue?: Record<string, unknown> | null;
        changes?: serializers.IChange.Raw[] | null;
    }
}
