/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { JobRunStatus } from "./JobRunStatus.js";
import { Subject } from "./Subject.js";

export const JobRun: core.serialization.ObjectSchema<serializers.JobRun.Raw, TrueFoundry.JobRun> =
    core.serialization.object({
        name: core.serialization.string(),
        applicationName: core.serialization.string(),
        deploymentVersion: core.serialization.string(),
        createdAt: core.serialization.number(),
        endTime: core.serialization.number().optional(),
        duration: core.serialization.number().optional(),
        command: core.serialization.string(),
        totalRetries: core.serialization.number(),
        error: core.serialization.string().optional(),
        status: JobRunStatus,
        triggeredBy: core.serialization.string().optional(),
        triggeredBySubject: Subject.optional(),
        exitCode: core.serialization.number().optional(),
        sparkUi: core.serialization.string().optional(),
    });

export declare namespace JobRun {
    export interface Raw {
        name: string;
        applicationName: string;
        deploymentVersion: string;
        createdAt: number;
        endTime?: number | null;
        duration?: number | null;
        command: string;
        totalRetries: number;
        error?: string | null;
        status: JobRunStatus.Raw;
        triggeredBy?: string | null;
        triggeredBySubject?: Subject.Raw | null;
        exitCode?: number | null;
        sparkUi?: string | null;
    }
}
