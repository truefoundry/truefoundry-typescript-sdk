/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { LoadBalancingWhen } from "./LoadBalancingWhen.js";
import { LatencyBasedLoadBalanceTarget } from "./LatencyBasedLoadBalanceTarget.js";

export const LatencyBasedLoadBalancingRule: core.serialization.ObjectSchema<
    serializers.LatencyBasedLoadBalancingRule.Raw,
    TrueFoundry.LatencyBasedLoadBalancingRule
> = core.serialization.object({
    id: core.serialization.string(),
    when: LoadBalancingWhen,
    load_balance_targets: core.serialization.list(LatencyBasedLoadBalanceTarget),
    type: core.serialization.stringLiteral("latency-based-routing"),
});

export declare namespace LatencyBasedLoadBalancingRule {
    export interface Raw {
        id: string;
        when: LoadBalancingWhen.Raw;
        load_balance_targets: LatencyBasedLoadBalanceTarget.Raw[];
        type: "latency-based-routing";
    }
}
