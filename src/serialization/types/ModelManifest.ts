/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ModelManifestSource } from "./ModelManifestSource";
import { ModelManifestFramework } from "./ModelManifestFramework";
import { ModelVersionEnvironment } from "./ModelVersionEnvironment.js";

export const ModelManifest: core.serialization.ObjectSchema<serializers.ModelManifest.Raw, TrueFoundry.ModelManifest> =
    core.serialization.object({
        name: core.serialization.string(),
        description: core.serialization.string().optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        version_alias: core.serialization.string().optional(),
        ml_repo: core.serialization.string(),
        version: core.serialization.number().optional(),
        type: core.serialization.stringLiteral("model-version"),
        source: ModelManifestSource,
        framework: ModelManifestFramework.optional(),
        environment: ModelVersionEnvironment.optional(),
        step: core.serialization.number().optional(),
        run_id: core.serialization.string().optional(),
    });

export declare namespace ModelManifest {
    export interface Raw {
        name: string;
        description?: string | null;
        metadata: Record<string, unknown>;
        version_alias?: string | null;
        ml_repo: string;
        version?: number | null;
        type: "model-version";
        source: ModelManifestSource.Raw;
        framework?: ModelManifestFramework.Raw | null;
        environment?: ModelVersionEnvironment.Raw | null;
        step?: number | null;
        run_id?: string | null;
    }
}
