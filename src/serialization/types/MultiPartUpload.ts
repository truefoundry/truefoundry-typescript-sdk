/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { MultiPartUploadStorageProvider } from "./MultiPartUploadStorageProvider.js";
import { SignedUrl } from "./SignedUrl.js";

export const MultiPartUpload: core.serialization.ObjectSchema<
    serializers.MultiPartUpload.Raw,
    TrueFoundry.MultiPartUpload
> = core.serialization.object({
    storageProvider: core.serialization.property("storage_provider", MultiPartUploadStorageProvider),
    partSignedUrls: core.serialization.property("part_signed_urls", core.serialization.list(SignedUrl)),
    s3CompatibleUploadId: core.serialization.property(
        "s3_compatible_upload_id",
        core.serialization.string().optional(),
    ),
    azureBlobBlockIds: core.serialization.property(
        "azure_blob_block_ids",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    finalizeSignedUrl: core.serialization.property("finalize_signed_url", SignedUrl),
});

export declare namespace MultiPartUpload {
    export interface Raw {
        storage_provider: MultiPartUploadStorageProvider.Raw;
        part_signed_urls: SignedUrl.Raw[];
        s3_compatible_upload_id?: string | null;
        azure_blob_block_ids?: string[] | null;
        finalize_signed_url: SignedUrl.Raw;
    }
}
