/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { ModelType } from "./ModelType.js";
import { ModelCostMetric } from "./ModelCostMetric.js";

export const PerplexityAiModel: core.serialization.ObjectSchema<
    serializers.PerplexityAiModel.Raw,
    TrueFoundry.PerplexityAiModel
> = core.serialization.object({
    type: core.serialization.stringLiteral("integration/model/perplexity-ai"),
    name: core.serialization.string(),
    modelId: core.serialization.property("model_id", core.serialization.string()),
    modelTypes: core.serialization.property("model_types", core.serialization.list(ModelType)),
    cost: ModelCostMetric.optional(),
    authorizedSubjects: core.serialization.property(
        "authorized_subjects",
        core.serialization.list(core.serialization.string()).optional(),
    ),
});

export declare namespace PerplexityAiModel {
    export interface Raw {
        type: "integration/model/perplexity-ai";
        name: string;
        model_id: string;
        model_types: ModelType.Raw[];
        cost?: ModelCostMetric.Raw | null;
        authorized_subjects?: string[] | null;
    }
}
