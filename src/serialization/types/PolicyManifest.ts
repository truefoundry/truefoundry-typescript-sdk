/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { PolicyManifestOperation } from "./PolicyManifestOperation";
import { PolicyManifestMode } from "./PolicyManifestMode";
import { PolicyEntityTypes } from "./PolicyEntityTypes.js";
import { PolicyActions } from "./PolicyActions.js";
import { PolicyFilters } from "./PolicyFilters.js";

export const PolicyManifest: core.serialization.ObjectSchema<
    serializers.PolicyManifest.Raw,
    TrueFoundry.PolicyManifest
> = core.serialization.object({
    type: core.serialization.stringLiteral("policy"),
    name: core.serialization.string(),
    description: core.serialization.string(),
    operation: PolicyManifestOperation,
    mode: PolicyManifestMode,
    entities: core.serialization.list(PolicyEntityTypes),
    actions: core.serialization.list(PolicyActions),
    filters: PolicyFilters.optional(),
    code: core.serialization.string(),
});

export declare namespace PolicyManifest {
    export interface Raw {
        type: "policy";
        name: string;
        description: string;
        operation: PolicyManifestOperation.Raw;
        mode: PolicyManifestMode.Raw;
        entities: PolicyEntityTypes.Raw[];
        actions: PolicyActions.Raw[];
        filters?: PolicyFilters.Raw | null;
        code: string;
    }
}
