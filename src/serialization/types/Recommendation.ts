/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";

export const Recommendation: core.serialization.ObjectSchema<
    serializers.Recommendation.Raw,
    TrueFoundry.Recommendation
> = core.serialization.object({
    id: core.serialization.string().optional(),
    clusterId: core.serialization.string().optional(),
    applicationId: core.serialization.string().optional(),
    deploymentId: core.serialization.string().optional(),
    applicationVersion: core.serialization.number().optional(),
    recommendationData: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    recommendationType: core.serialization.string(),
    appliedDeploymentId: core.serialization.string().optional(),
    expiryTimestamp: core.serialization.date(),
    createdAt: core.serialization.date().optional(),
    updatedAt: core.serialization.date().optional(),
});

export declare namespace Recommendation {
    export interface Raw {
        id?: string | null;
        clusterId?: string | null;
        applicationId?: string | null;
        deploymentId?: string | null;
        applicationVersion?: number | null;
        recommendationData: Record<string, unknown>;
        recommendationType: string;
        appliedDeploymentId?: string | null;
        expiryTimestamp: string;
        createdAt?: string | null;
        updatedAt?: string | null;
    }
}
