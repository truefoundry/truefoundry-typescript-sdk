/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { Subject } from "./Subject.js";

export const Secret: core.serialization.ObjectSchema<serializers.Secret.Raw, TrueFoundry.Secret> =
    core.serialization.object({
        id: core.serialization.string(),
        fqn: core.serialization.string(),
        name: core.serialization.string(),
        secretGroupId: core.serialization.string(),
        value: core.serialization.string().optional(),
        createdBySubject: Subject.optional(),
        createdAt: core.serialization.date().optional(),
        updatedAt: core.serialization.date().optional(),
        secretVersions: core.serialization
            .list(core.serialization.lazyObject(() => serializers.SecretVersion))
            .optional(),
        activeDeploymentsCount: core.serialization.number().optional(),
        createdBy: core.serialization.string().optional(),
    });

export declare namespace Secret {
    export interface Raw {
        id: string;
        fqn: string;
        name: string;
        secretGroupId: string;
        value?: string | null;
        createdBySubject?: Subject.Raw | null;
        createdAt?: string | null;
        updatedAt?: string | null;
        secretVersions?: serializers.SecretVersion.Raw[] | null;
        activeDeploymentsCount?: number | null;
        createdBy?: string | null;
    }
}
