/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { SubjectType } from "./SubjectType.js";
import { UserMetadata } from "./UserMetadata.js";

export const Session: core.serialization.ObjectSchema<serializers.Session.Raw, TrueFoundry.Session> =
    core.serialization.object({
        id: core.serialization.string(),
        userName: core.serialization.string(),
        subjectSlug: core.serialization.string(),
        subjectControllerName: core.serialization.string().optional(),
        subjectPatName: core.serialization.string().optional(),
        email: core.serialization.string().optional(),
        subjectType: SubjectType,
        tenantName: core.serialization.string().optional(),
        roles: core.serialization.list(core.serialization.string()),
        teams: core.serialization.list(core.serialization.string()),
        metadata: UserMetadata.optional(),
    });

export declare namespace Session {
    export interface Raw {
        id: string;
        userName: string;
        subjectSlug: string;
        subjectControllerName?: string | null;
        subjectPatName?: string | null;
        email?: string | null;
        subjectType: SubjectType.Raw;
        tenantName?: string | null;
        roles: string[];
        teams: string[];
        metadata?: UserMetadata.Raw | null;
    }
}
