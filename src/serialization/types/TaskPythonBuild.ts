/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";

export const TaskPythonBuild: core.serialization.ObjectSchema<
    serializers.TaskPythonBuild.Raw,
    TrueFoundry.TaskPythonBuild
> = core.serialization.object({
    type: core.serialization.stringLiteral("task-python-build"),
    dockerRegistry: core.serialization.property("docker_registry", core.serialization.string().optional()),
    pythonVersion: core.serialization.property("python_version", core.serialization.string().optional()),
    requirementsPath: core.serialization.property("requirements_path", core.serialization.string().optional()),
    pipPackages: core.serialization.property(
        "pip_packages",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    aptPackages: core.serialization.property(
        "apt_packages",
        core.serialization.list(core.serialization.string()).optional(),
    ),
    cudaVersion: core.serialization.property("cuda_version", core.serialization.string().optional()),
});

export declare namespace TaskPythonBuild {
    export interface Raw {
        type: "task-python-build";
        docker_registry?: string | null;
        python_version?: string | null;
        requirements_path?: string | null;
        pip_packages?: string[] | null;
        apt_packages?: string[] | null;
        cuda_version?: string | null;
    }
}
