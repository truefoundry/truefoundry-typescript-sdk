/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { Helm } from "./Helm.js";

export const UpgradeData: core.serialization.ObjectSchema<serializers.UpgradeData.Raw, TrueFoundry.UpgradeData> =
    core.serialization.object({
        diff: core.serialization.list(core.serialization.lazyObject(() => serializers.IChange)).optional(),
        currentManifest: Helm.optional(),
        desiredManifest: Helm.optional(),
        upgradePossible: core.serialization.boolean().optional(),
        conflictFields: core.serialization.list(core.serialization.string()).optional(),
        hasConflict: core.serialization.boolean().optional(),
    });

export declare namespace UpgradeData {
    export interface Raw {
        diff?: serializers.IChange.Raw[] | null;
        currentManifest?: Helm.Raw | null;
        desiredManifest?: Helm.Raw | null;
        upgradePossible?: boolean | null;
        conflictFields?: string[] | null;
        hasConflict?: boolean | null;
    }
}
