/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { UserMetadata } from "./UserMetadata.js";

export const User: core.serialization.ObjectSchema<serializers.User.Raw, TrueFoundry.User> = core.serialization.object({
    id: core.serialization.string(),
    email: core.serialization.string(),
    userName: core.serialization.string(),
    tenantName: core.serialization.string(),
    metadata: UserMetadata,
    roles: core.serialization.list(core.serialization.string()).optional(),
    active: core.serialization.boolean(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace User {
    export interface Raw {
        id: string;
        email: string;
        userName: string;
        tenantName: string;
        metadata: UserMetadata.Raw;
        roles?: string[] | null;
        active: boolean;
        createdAt: string;
        updatedAt: string;
    }
}
