/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { Subject } from "./Subject.js";
import { WorkspaceManifest } from "./WorkspaceManifest.js";

export const Workspace: core.serialization.ObjectSchema<serializers.Workspace.Raw, TrueFoundry.Workspace> =
    core.serialization.object({
        id: core.serialization.string(),
        fqn: core.serialization.string(),
        name: core.serialization.string(),
        tenantName: core.serialization.string(),
        clusterId: core.serialization.string(),
        createdBySubject: Subject,
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
        environmentId: core.serialization.string().optional(),
        manifest: WorkspaceManifest,
        isSystemWs: core.serialization.boolean().optional(),
        createdBy: core.serialization.string().optional(),
    });

export declare namespace Workspace {
    export interface Raw {
        id: string;
        fqn: string;
        name: string;
        tenantName: string;
        clusterId: string;
        createdBySubject: Subject.Raw;
        createdAt: string;
        updatedAt: string;
        environmentId?: string | null;
        manifest: WorkspaceManifest.Raw;
        isSystemWs?: boolean | null;
        createdBy?: string | null;
    }
}
