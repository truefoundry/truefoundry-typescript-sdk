/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index.js";
import * as TrueFoundry from "../../api/index.js";
import * as core from "../../core/index.js";
import { Collaborator } from "./Collaborator.js";
import { Permissions } from "./Permissions.js";

export const WorkspaceManifest: core.serialization.ObjectSchema<
    serializers.WorkspaceManifest.Raw,
    TrueFoundry.WorkspaceManifest
> = core.serialization.object({
    type: core.serialization.stringLiteral("workspace"),
    cluster_fqn: core.serialization.string(),
    name: core.serialization.string(),
    environment_name: core.serialization.string().optional(),
    labels: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    annotations: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    collaborators: core.serialization.list(Collaborator).optional(),
    permissions: core.serialization.list(Permissions).optional(),
});

export declare namespace WorkspaceManifest {
    export interface Raw {
        type: "workspace";
        cluster_fqn: string;
        name: string;
        environment_name?: string | null;
        labels?: Record<string, string> | null;
        annotations?: Record<string, string> | null;
        collaborators?: Collaborator.Raw[] | null;
        permissions?: Permissions.Raw[] | null;
    }
}
