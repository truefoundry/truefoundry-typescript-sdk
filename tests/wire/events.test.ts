/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { TrueFoundryClient } from "../../src/Client";

describe("Events", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new TrueFoundryClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    name: "name",
                    firstTimestamp: "firstTimestamp",
                    lastTimestamp: "lastTimestamp",
                    involvedObject: { kind: "kind", name: "name" },
                    type: "type",
                    count: 1,
                    reason: "reason",
                    message: "message",
                    namespace: "namespace",
                    chart: { category: "ContainerTerminated" },
                },
            ],
        };
        server.mockEndpoint().get("/api/svc/v1/events").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.events.get();
        expect(response).toEqual({
            data: [
                {
                    name: "name",
                    firstTimestamp: "firstTimestamp",
                    lastTimestamp: "lastTimestamp",
                    involvedObject: {
                        kind: "kind",
                        name: "name",
                    },
                    type: "type",
                    count: 1,
                    reason: "reason",
                    message: "message",
                    namespace: "namespace",
                    chart: {
                        category: "ContainerTerminated",
                    },
                },
            ],
        });
    });
});
