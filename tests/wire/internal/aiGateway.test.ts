/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { TrueFoundryClient } from "../../../src/Client";

describe("AiGateway", () => {
    test("get_gateway_config", async () => {
        const server = mockServerPool.createServer();
        const client = new TrueFoundryClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            tenantName: "tenantName",
            type: "type",
            manifest: {},
            createdBySubject: {
                subjectId: "subjectId",
                subjectType: "user",
                subjectSlug: "subjectSlug",
                subjectDisplayName: "subjectDisplayName",
            },
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
        };
        server
            .mockEndpoint()
            .get("/api/svc/v1/llm-gateway/config/gateway-rate-limiting-config")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.internal.aiGateway.getGatewayConfig("gateway-rate-limiting-config");
        expect(response).toEqual({
            id: "id",
            tenantName: "tenantName",
            type: "type",
            manifest: {},
            createdBySubject: {
                subjectId: "subjectId",
                subjectType: "user",
                subjectSlug: "subjectSlug",
                subjectDisplayName: "subjectDisplayName",
            },
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
        });
    });
});
