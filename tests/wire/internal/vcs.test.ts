/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { TrueFoundryClient } from "../../../src/Client";

describe("Vcs", () => {
    test("get_repository_details", async () => {
        const server = mockServerPool.createServer();
        const client = new TrueFoundryClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { repoURL: "repoURL" };
        const rawResponseBody = { exists: true, id: "id" };
        server
            .mockEndpoint()
            .post("/api/svc/v1/vcs/repository/details")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.internal.vcs.getRepositoryDetails({
            repoURL: "repoURL",
        });
        expect(response).toEqual({
            exists: true,
            id: "id",
        });
    });

    test("get_authenticated_url", async () => {
        const server = mockServerPool.createServer();
        const client = new TrueFoundryClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { repoURL: "repoURL" };
        const rawResponseBody = { authenticatedURL: "authenticatedURL" };
        server
            .mockEndpoint()
            .post("/api/svc/v1/vcs/repository/authenticated-url")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.internal.vcs.getAuthenticatedUrl({
            repoURL: "repoURL",
        });
        expect(response).toEqual({
            authenticatedURL: "authenticatedURL",
        });
    });
});
